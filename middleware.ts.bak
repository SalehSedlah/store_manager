
import createNextIntlMiddleware from 'next-intl/middleware';
import { NextRequest } from 'next/server';
import { locales, defaultLocale, localePrefix, pathnames } from './src/i18n.config'; // Ensure path is correct

const handleI18nRouting = createNextIntlMiddleware({
  locales,
  defaultLocale,
  localePrefix,
  pathnames,
});

export default function middleware(request: NextRequest) {
  // Apply i18n routing
  const response = handleI18nRouting(request);

  // Add security headers to the response from next-intl
  response.headers.set('x-content-type-options', 'nosniff');
  response.headers.set('x-dns-prefetch-control', 'off');
  response.headers.set('x-download-options', 'noopen');
  response.headers.set('x-frame-options', 'SAMEORIGIN');
  response.headers.set('x-xss-protection', '1; mode=block');
  
  return response;
}

export const config = {
  // Matcher ignoring `/_next/` and `/api/`
  // Adjust this based on your specific needs and static assets paths.
  matcher: [
    // Enable a redirect to a matching locale at the root
    '/',

    // Set a cookie to remember the previous locale for
    // all requests that have a locale prefix
    '/(ar|en)/:path*',

    // Enable redirects that add missing locales
    // (e.g. `/pathnames` -> `/en/pathnames`)
    // Exclude API routes, Next.js internal paths, and static files like images/favicon
    '/((?!api|_next/static|_next/image|assets|favicon.ico|sw.js).*)'
  ]
};
